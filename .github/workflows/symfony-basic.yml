# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

  # Runs a single command using the runners shell
    - name: Docker Setup
      run: git clone https://github.com/akshay-achar/docker-setup.git && cd docker-setup && docker build . --file Dockerfile --tag my-image-name:$(date +%s) && mkdir project && mkdir mongo_dump && mkdir mysql_dump && docker-compose up -d && docker ps  

    # Runs a single command using the runners shell
    - name: Update the Parameters
      run: sh bin/git-workflow-parameters-update.sh && cat .env.local

    # Runs a single command using the runners shell
    - name: Run a Composer Install
      run: composer install 

    # Runs a set of commands using the runners shell
    - name: Run a Symfony Cache Clear
      run: |
        ./bin/console cache:clear;
        ./bin/console cache:clear --env=prod

    # Runs a single command using the runners shell
    - name: Database Creation 
      run: bin/console doctrine:database:create 


    # Runs a set of commands using the runners shell
    - name: Run a Symfony Doctrine Schema Update
      run: ./bin/console doctrine:schema:update --dump-sql --force 

    # Runs a set of commands using the runners shell
    - name: Run a Symfony Doctrine Schema Cache Clear Result
      run: ./bin/console doctrine:cache:clear-result



